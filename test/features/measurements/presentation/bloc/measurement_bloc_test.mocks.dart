// Mocks generated by Mockito 5.0.16 from annotations
// in body_composition_tracker/test/features/measurements/presentation/bloc/measurement_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:body_composition_tracker/core/error/failures.dart' as _i5;
import 'package:body_composition_tracker/core/util/input_converter.dart' as _i8;
import 'package:body_composition_tracker/features/measurements/domain/entities/measurement_entity.dart'
    as _i7;
import 'package:body_composition_tracker/features/measurements/domain/usecases/get_measurement_for_date.dart'
    as _i6;
import 'package:body_composition_tracker/features/measurements/domain/usecases/save_measurement.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [SaveMeasurement].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveMeasurement extends _i1.Mock implements _i3.SaveMeasurement {
  MockSaveMeasurement() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> call(_i3.Params? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i2.Either<_i5.Failure, int>>.value(
                  _FakeEither_0<_i5.Failure, int>()))
          as _i4.Future<_i2.Either<_i5.Failure, int>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetMeasurementForDate].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMeasurementForDate extends _i1.Mock
    implements _i6.GetMeasurementForDate {
  MockGetMeasurementForDate() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.MeasurementEntity>> execute(
          {int? date}) =>
      (super.noSuchMethod(Invocation.method(#execute, [], {#date: date}),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i7.MeasurementEntity>>.value(
                      _FakeEither_0<_i5.Failure, _i7.MeasurementEntity>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i7.MeasurementEntity>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [InputConverter].
///
/// See the documentation for Mockito's code generation for more information.
class MockInputConverter extends _i1.Mock implements _i8.InputConverter {
  MockInputConverter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<_i5.Failure, double> stringToDouble(String? str) =>
      (super.noSuchMethod(Invocation.method(#stringToDouble, [str]),
              returnValue: _FakeEither_0<_i5.Failure, double>())
          as _i2.Either<_i5.Failure, double>);
  @override
  String toString() => super.toString();
}
