// Mocks generated by Mockito 5.0.16 from annotations
// in body_composition_tracker/test/features/measurements/domain/usecases/save_measurement_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:body_composition_tracker/core/error/failures.dart' as _i5;
import 'package:body_composition_tracker/features/measurements/domain/entities/measurement_entity.dart'
    as _i6;
import 'package:body_composition_tracker/features/measurements/domain/repositories/measurement_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [MeasurementRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeasurementRepository extends _i1.Mock
    implements _i3.MeasurementRepository {
  MockMeasurementRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MeasurementEntity>>
      getMeasurementForDate(int? date) => (super.noSuchMethod(
              Invocation.method(#getMeasurementForDate, [date]),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i6.MeasurementEntity>>.value(
                      _FakeEither_0<_i5.Failure, _i6.MeasurementEntity>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.MeasurementEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> saveMeasurement(
          {int? id,
          double? neck,
          double? chest,
          double? hips,
          double? waist,
          double? bicep,
          double? thigh,
          int? date,
          int? createdAt,
          int? editedAt}) =>
      (super.noSuchMethod(
              Invocation.method(#saveMeasurement, [], {
                #id: id,
                #neck: neck,
                #chest: chest,
                #hips: hips,
                #waist: waist,
                #bicep: bicep,
                #thigh: thigh,
                #date: date,
                #createdAt: createdAt,
                #editedAt: editedAt
              }),
              returnValue: Future<_i2.Either<_i5.Failure, int>>.value(
                  _FakeEither_0<_i5.Failure, int>()))
          as _i4.Future<_i2.Either<_i5.Failure, int>>);
  @override
  String toString() => super.toString();
}
